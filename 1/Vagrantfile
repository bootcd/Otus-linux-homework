# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:Router1 => {
        :box_name => "centos/7",
        :net => [	{adapter: 2, auto_config: false, virtualbox__intnet: "VLAN10"},
					{adapter: 3, auto_config: false, virtualbox__intnet: "VLAN20"},
					{ip: '192.168.1.10', adapter: 4, netmask: "255.255.255.192", virtualbox__intnet: "area1-net"},
					
				   
                ]
  },
  :Router2 => {
        :box_name => "centos/7",
        :net => [	{adapter: 2, auto_config: false, virtualbox__intnet: "VLAN10"},
					{adapter: 3, auto_config: false, virtualbox__intnet: "VLAN30"},
				    {ip: '192.168.2.10', adapter: 4, netmask: "255.255.255.192", virtualbox__intnet: "area2-net"},
                ]
  },
  
  :Router3 => {
		:box_name => "centos/7",
		:net => [	{adapter: 2, auto_config: false, virtualbox__intnet: "VLAN30"},
					{adapter: 3, auto_config: false, virtualbox__intnet: "VLAN20"},
					{ip: '192.168.3.10', adapter: 4, netmask: "255.255.255.192", virtualbox__intnet: "area3-net"},
				]
},

}
Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
        when "Router1"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
			echo "NM_CONTROLLED=no\nBOOTPROTO=static\nONBOOT=yes\nVLAN=yes\nPHYSDEV=eth1\nIPADDR=192.168.10.1\nNETMASK=255.255.255.0\nDEVICE=eth1.10" > /etc/sysconfig/network-scripts/ifcfg-eth1.10
			echo "NM_CONTROLLED=no\nBOOTPROTO=static\nONBOOT=yes\nVLAN=yes\nPHYSDEV=eth2\nIPADDR=192.168.20.1\nNETMASK=255.255.255.0\nDEVICE=eth2.20" > /etc/sysconfig/network-scripts/ifcfg-eth2.20
			service network restart
			echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
			sysctl -p /etc/sysctl.conf
			yum install -y quagga
            SHELL
        when "Router2"
		  box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "NM_CONTROLLED=no\nBOOTPROTO=static\nONBOOT=yes\nVLAN=yes\nPHYSDEV=eth1\nIPADDR=192.168.10.2\nNETMASK=255.255.255.0\nDEVICE=eth1.10" > /etc/sysconfig/network-scripts/ifcfg-eth1.10
			echo "NM_CONTROLLED=no\nBOOTPROTO=static\nONBOOT=yes\nVLAN=yes\nPHYSDEV=eth2\nIPADDR=192.168.30.1\nNETMASK=255.255.255.0\nDEVICE=eth2.30" > /etc/sysconfig/network-scripts/ifcfg-eth2.30
			service network restart
			echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
			sysctl -p /etc/sysctl.conf
			yum install -y quagga
            SHELL
		when "Router3"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
		    echo "NM_CONTROLLED=no\nBOOTPROTO=static\nONBOOT=yes\nVLAN=yes\nPHYSDEV=eth1\nIPADDR=192.168.30.2\nNETMASK=255.255.255.0\nDEVICE=eth1.30" > /etc/sysconfig/network-scripts/ifcfg-eth1.30
			echo "NM_CONTROLLED=no\nBOOTPROTO=static\nONBOOT=yes\nVLAN=yes\nPHYSDEV=eth2\nIPADDR=192.168.20.2\nNETMASK=255.255.255.0\nDEVICE=eth2.20" > /etc/sysconfig/network-scripts/ifcfg-eth2.20
            service network restart
			echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.conf
			sysctl -p /etc/sysctl.conf
			yum install -y quagga
            SHELL
		
        end

      end

  end
  
  
end

